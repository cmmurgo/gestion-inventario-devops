# Nombre del workflow
name: CI/CD Temporal

on:
  push:
    branches: [ "merge-test-fernandoQA" ]
  pull_request:
    branches: [ "merge-test-fernandoQA" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # -- SECCIÓN DE TEST MODIFICADA --
   
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: ${{ secrets.TEST_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_DB_DATABASE }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      # -- SECCIÓN DE TEST MODIFICADA --
      # Este paso se conecta a la base de datos usando los mismos secretos definidos en el servicio.
      - name: Instalar dependencias y testear backend
        env:
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USER: ${{ secrets.TEST_DB_USER }}
          DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.TEST_DB_DATABASE }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          cd backend
          npm ci
          npm run test

      # -- SECCIÓN DE DOCKER
      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login a Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build y Push de imagen backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
       
          tags: ${{ secrets.DOCKER_USERNAME }}/backend-inventario:latest

      - name: Build y Push de imagen frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
         
          tags: ${{ secrets.DOCKER_USERNAME }}/frontend-inventario:latest

